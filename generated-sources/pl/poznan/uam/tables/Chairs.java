/*
 * This file is generated by jOOQ.
*/
package pl.poznan.uam.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.poznan.uam.Keys;
import pl.poznan.uam.Public;
import pl.poznan.uam.tables.records.ChairsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chairs extends TableImpl<ChairsRecord> {

    private static final long serialVersionUID = 1966523052;

    /**
     * The reference instance of <code>public.chairs</code>
     */
    public static final Chairs CHAIRS = new Chairs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChairsRecord> getRecordType() {
        return ChairsRecord.class;
    }

    /**
     * The column <code>public.chairs.id</code>.
     */
    public final TableField<ChairsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('chairs_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.chairs.height</code>.
     */
    public final TableField<ChairsRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.chairs.width</code>.
     */
    public final TableField<ChairsRecord, Integer> WIDTH = createField("width", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.chairs.color</code>.
     */
    public final TableField<ChairsRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>public.chairs.name</code>.
     */
    public final TableField<ChairsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>public.chairs</code> table reference
     */
    public Chairs() {
        this("chairs", null);
    }

    /**
     * Create an aliased <code>public.chairs</code> table reference
     */
    public Chairs(String alias) {
        this(alias, CHAIRS);
    }

    private Chairs(String alias, Table<ChairsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Chairs(String alias, Table<ChairsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ChairsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHAIRS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChairsRecord> getPrimaryKey() {
        return Keys.CHAIRS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChairsRecord>> getKeys() {
        return Arrays.<UniqueKey<ChairsRecord>>asList(Keys.CHAIRS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Chairs as(String alias) {
        return new Chairs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Chairs rename(String name) {
        return new Chairs(name, null);
    }
}
