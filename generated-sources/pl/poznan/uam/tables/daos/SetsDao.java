/*
 * This file is generated by jOOQ.
*/
package pl.poznan.uam.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import pl.poznan.uam.tables.Sets;
import pl.poznan.uam.tables.records.SetsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SetsDao extends DAOImpl<SetsRecord, pl.poznan.uam.tables.pojos.Sets, Integer> {

    /**
     * Create a new SetsDao without any configuration
     */
    public SetsDao() {
        super(Sets.SETS, pl.poznan.uam.tables.pojos.Sets.class);
    }

    /**
     * Create a new SetsDao with an attached configuration
     */
    public SetsDao(Configuration configuration) {
        super(Sets.SETS, pl.poznan.uam.tables.pojos.Sets.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(pl.poznan.uam.tables.pojos.Sets object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<pl.poznan.uam.tables.pojos.Sets> fetchById(Integer... values) {
        return fetch(Sets.SETS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public pl.poznan.uam.tables.pojos.Sets fetchOneById(Integer value) {
        return fetchOne(Sets.SETS.ID, value);
    }

    /**
     * Fetch records that have <code>chair_id IN (values)</code>
     */
    public List<pl.poznan.uam.tables.pojos.Sets> fetchByChairId(Integer... values) {
        return fetch(Sets.SETS.CHAIR_ID, values);
    }

    /**
     * Fetch records that have <code>table_id IN (values)</code>
     */
    public List<pl.poznan.uam.tables.pojos.Sets> fetchByTableId(Integer... values) {
        return fetch(Sets.SETS.TABLE_ID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<pl.poznan.uam.tables.pojos.Sets> fetchByName(String... values) {
        return fetch(Sets.SETS.NAME, values);
    }
}
