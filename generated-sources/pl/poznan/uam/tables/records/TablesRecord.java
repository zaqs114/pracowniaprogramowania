/*
 * This file is generated by jOOQ.
*/
package pl.poznan.uam.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import pl.poznan.uam.tables.Tables;
import pl.poznan.uam.tables.interfaces.ITables;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TablesRecord extends UpdatableRecordImpl<TablesRecord> implements Record6<Integer, Integer, Integer, Integer, String, String>, ITables {

    private static final long serialVersionUID = -985121501;

    /**
     * Setter for <code>public.tables.id</code>.
     */
    @Override
    public TablesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tables.height</code>.
     */
    @Override
    public TablesRecord setHeight(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.height</code>.
     */
    @NotNull
    @Override
    public Integer getHeight() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.tables.width</code>.
     */
    @Override
    public TablesRecord setWidth(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.width</code>.
     */
    @NotNull
    @Override
    public Integer getWidth() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.tables.lenght</code>.
     */
    @Override
    public TablesRecord setLenght(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.lenght</code>.
     */
    @NotNull
    @Override
    public Integer getLenght() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.tables.shape</code>.
     */
    @Override
    public TablesRecord setShape(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.shape</code>.
     */
    @NotNull
    @Size(max = 64)
    @Override
    public String getShape() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.tables.name</code>.
     */
    @Override
    public TablesRecord setName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.tables.name</code>.
     */
    @NotNull
    @Size(max = 65)
    @Override
    public String getName() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Tables.TABLES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Tables.TABLES.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Tables.TABLES.WIDTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Tables.TABLES.LENGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Tables.TABLES.SHAPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Tables.TABLES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLenght();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getShape();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLenght();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getShape();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value2(Integer value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value3(Integer value) {
        setWidth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value4(Integer value) {
        setLenght(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value5(String value) {
        setShape(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord value6(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablesRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITables from) {
        setId(from.getId());
        setHeight(from.getHeight());
        setWidth(from.getWidth());
        setLenght(from.getLenght());
        setShape(from.getShape());
        setName(from.getName());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITables> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TablesRecord
     */
    public TablesRecord() {
        super(Tables.TABLES);
    }

    /**
     * Create a detached, initialised TablesRecord
     */
    public TablesRecord(Integer id, Integer height, Integer width, Integer lenght, String shape, String name) {
        super(Tables.TABLES);

        set(0, id);
        set(1, height);
        set(2, width);
        set(3, lenght);
        set(4, shape);
        set(5, name);
    }
}
