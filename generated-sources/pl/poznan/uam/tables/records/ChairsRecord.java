/*
 * This file is generated by jOOQ.
*/
package pl.poznan.uam.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import pl.poznan.uam.tables.Chairs;
import pl.poznan.uam.tables.interfaces.IChairs;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChairsRecord extends UpdatableRecordImpl<ChairsRecord> implements Record5<Integer, Integer, Integer, String, String>, IChairs {

    private static final long serialVersionUID = 136649936;

    /**
     * Setter for <code>public.chairs.id</code>.
     */
    @Override
    public ChairsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.chairs.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.chairs.height</code>.
     */
    @Override
    public ChairsRecord setHeight(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.chairs.height</code>.
     */
    @NotNull
    @Override
    public Integer getHeight() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.chairs.width</code>.
     */
    @Override
    public ChairsRecord setWidth(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.chairs.width</code>.
     */
    @NotNull
    @Override
    public Integer getWidth() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.chairs.color</code>.
     */
    @Override
    public ChairsRecord setColor(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.chairs.color</code>.
     */
    @NotNull
    @Size(max = 64)
    @Override
    public String getColor() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.chairs.name</code>.
     */
    @Override
    public ChairsRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.chairs.name</code>.
     */
    @NotNull
    @Size(max = 64)
    @Override
    public String getName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Chairs.CHAIRS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Chairs.CHAIRS.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Chairs.CHAIRS.WIDTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Chairs.CHAIRS.COLOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Chairs.CHAIRS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getColor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getWidth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getColor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord value2(Integer value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord value3(Integer value) {
        setWidth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord value4(String value) {
        setColor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChairsRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IChairs from) {
        setId(from.getId());
        setHeight(from.getHeight());
        setWidth(from.getWidth());
        setColor(from.getColor());
        setName(from.getName());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IChairs> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChairsRecord
     */
    public ChairsRecord() {
        super(Chairs.CHAIRS);
    }

    /**
     * Create a detached, initialised ChairsRecord
     */
    public ChairsRecord(Integer id, Integer height, Integer width, String color, String name) {
        super(Chairs.CHAIRS);

        set(0, id);
        set(1, height);
        set(2, width);
        set(3, color);
        set(4, name);
    }
}
